{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nexport const useStore = create(set => ({\n  projects: [],\n  engineers: [],\n  assignments: [],\n  loading: false,\n  error: null,\n  setLoading: loading => set({\n    loading\n  }),\n  setError: error => set({\n    error\n  }),\n  fetchProjects: async () => {\n    try {\n      set({\n        loading: true\n      });\n      const response = await axios.get('http://localhost:5000/api/projects');\n      set({\n        projects: response.data,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: error.message,\n        loading: false\n      });\n    }\n  },\n  fetchEngineers: async () => {\n    try {\n      set({\n        loading: true\n      });\n      const response = await axios.get('http://localhost:5000/api/engineers');\n      set({\n        engineers: response.data,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: error.message,\n        loading: false\n      });\n    }\n  },\n  fetchAssignments: async () => {\n    try {\n      set({\n        loading: true\n      });\n      const response = await axios.get('http://localhost:5000/api/assignments');\n      set({\n        assignments: response.data,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: error.message,\n        loading: false\n      });\n    }\n  },\n  createProject: async projectData => {\n    try {\n      set({\n        loading: true\n      });\n      await axios.post('http://localhost:5000/api/projects', projectData);\n      const response = await axios.get('http://localhost:5000/api/projects');\n      set({\n        projects: response.data,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: error.message,\n        loading: false\n      });\n    }\n  },\n  createAssignment: async assignmentData => {\n    try {\n      set({\n        loading: true\n      });\n      await axios.post('http://localhost:5000/api/assignments', assignmentData);\n      const response = await axios.get('http://localhost:5000/api/assignments');\n      set({\n        assignments: response.data,\n        loading: false\n      });\n    } catch (error) {\n      set({\n        error: error.message,\n        loading: false\n      });\n    }\n  }\n}));","map":{"version":3,"names":["create","axios","useStore","set","projects","engineers","assignments","loading","error","setLoading","setError","fetchProjects","response","get","data","message","fetchEngineers","fetchAssignments","createProject","projectData","post","createAssignment","assignmentData"],"sources":["C:/Assignment/frontend/src/store/index.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\nexport const useStore = create((set) => ({\r\n  projects: [],\r\n  engineers: [],\r\n  assignments: [],\r\n  loading: false,\r\n  error: null,\r\n\r\n  setLoading: (loading) => set({ loading }),\r\n  setError: (error) => set({ error }),\r\n\r\n  fetchProjects: async () => {\r\n    try {\r\n      set({ loading: true });\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      set({ projects: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: error.message, loading: false });\r\n    }\r\n  },\r\n\r\n  fetchEngineers: async () => {\r\n    try {\r\n      set({ loading: true });\r\n      const response = await axios.get('http://localhost:5000/api/engineers');\r\n      set({ engineers: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: error.message, loading: false });\r\n    }\r\n  },\r\n\r\n  fetchAssignments: async () => {\r\n    try {\r\n      set({ loading: true });\r\n      const response = await axios.get('http://localhost:5000/api/assignments');\r\n      set({ assignments: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: error.message, loading: false });\r\n    }\r\n  },\r\n\r\n  createProject: async (projectData) => {\r\n    try {\r\n      set({ loading: true });\r\n      await axios.post('http://localhost:5000/api/projects', projectData);\r\n      const response = await axios.get('http://localhost:5000/api/projects');\r\n      set({ projects: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: error.message, loading: false });\r\n    }\r\n  },\r\n\r\n  createAssignment: async (assignmentData) => {\r\n    try {\r\n      set({ loading: true });\r\n      await axios.post('http://localhost:5000/api/assignments', assignmentData);\r\n      const response = await axios.get('http://localhost:5000/api/assignments');\r\n      set({ assignments: response.data, loading: false });\r\n    } catch (error) {\r\n      set({ error: error.message, loading: false });\r\n    }\r\n  }\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}