{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment\\\\frontend\\\\src\\\\pages\\\\Assignments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useStore } from '../store';\nimport { useAuth } from '../store/auth';\nimport { CapacityBar } from '../components/ui/capacity-bar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Assignments() {\n  _s();\n  const {\n    assignments,\n    projects,\n    loading,\n    fetchAssignments,\n    fetchProjects\n  } = useStore();\n  const {\n    isManager\n  } = useAuth();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [engineers, setEngineers] = useState([]);\n  const [selectedEngineerId, setSelectedEngineerId] = useState('');\n  const [selectedEngineerCapacity, setSelectedEngineerCapacity] = useState(null);\n  const [allocationPercentage, setAllocationPercentage] = useState(50);\n  const [assignmentDates, setAssignmentDates] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [role, setRole] = useState('developer');\n  const [error, setError] = useState('');\n  const [loadingEngineers, setLoadingEngineers] = useState(false);\n  useEffect(() => {\n    fetchAssignments();\n    fetchProjects();\n  }, [fetchAssignments, fetchProjects]);\n\n  // Fetch engineers when modal is opened\n  useEffect(() => {\n    const fetchEngineers = async () => {\n      if (isModalOpen && currentProject) {\n        setLoadingEngineers(true);\n        try {\n          const response = await axios.get('http://localhost:5000/api/engineers');\n          setEngineers(response.data);\n        } catch (err) {\n          setError('Failed to load engineers');\n        }\n        setLoadingEngineers(false);\n      }\n    };\n    fetchEngineers();\n  }, [isModalOpen, currentProject]);\n\n  // Fetch engineer capacity when an engineer is selected\n  useEffect(() => {\n    const fetchEngineerCapacity = async () => {\n      if (selectedEngineerId) {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/engineers/${selectedEngineerId}/capacity`);\n          setSelectedEngineerCapacity(response.data);\n          // Adjust allocation percentage based on available capacity\n          if (response.data.available < allocationPercentage) {\n            setAllocationPercentage(Math.floor(response.data.available / 25) * 25);\n          }\n        } catch (err) {\n          setError('Failed to load engineer capacity');\n        }\n      }\n    };\n    fetchEngineerCapacity();\n  }, [selectedEngineerId, allocationPercentage]);\n  const handleEditAssignment = async assignment => {\n    setSelectedEngineerId(assignment.engineerId._id);\n    setAllocationPercentage(assignment.allocationPercentage);\n    setAssignmentDates({\n      startDate: new Date(assignment.startDate).toISOString().split('T')[0],\n      endDate: new Date(assignment.endDate).toISOString().split('T')[0]\n    });\n    setRole(assignment.role);\n  };\n  const handleDeleteAssignment = async assignmentId => {\n    if (window.confirm('Are you sure you want to delete this assignment?')) {\n      try {\n        await axios.delete(`http://localhost:5000/api/assignments/${assignmentId}`);\n        await fetchAssignments(); // Refresh the assignments list\n      } catch (err) {\n        setError('Failed to delete assignment');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6\",\n        children: isManager() ? \"Resource Management\" : \"Engineer Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), isModalOpen && currentProject && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: [currentProject.name, \" - Team Management\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 text-red-500\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b pb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-3\",\n              children: \"Current Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: assignments.filter(a => a.projectId._id === currentProject._id).map(assignment => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between bg-gray-50 p-2 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: assignment.engineerId.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-500 ml-2\",\n                    children: [\"(\", assignment.role, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEditAssignment(assignment),\n                    className: \"text-gray-600 hover:text-gray-900 text-sm\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      if (window.confirm(`Remove ${assignment.engineerId.name} from the project?`)) {\n                        handleDeleteAssignment(assignment._id);\n                      }\n                    },\n                    className: \"text-red-600 hover:text-red-900 text-sm\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this)]\n              }, assignment._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-3\",\n              children: selectedEngineerId ? 'Edit Assignment' : 'Add New Engineer'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Select Engineer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), loadingEngineers ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center py-2\",\n                  children: \"Loading engineers...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedEngineerId,\n                  onChange: e => {\n                    setSelectedEngineerId(e.target.value);\n                    setAllocationPercentage(50); // Reset allocation when engineer changes\n                  },\n                  className: \"w-full p-2 border rounded-md\",\n                  disabled: Boolean(selectedEngineerId) // Disable when editing\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Choose an engineer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this), engineers.filter(engineer => {\n                    // Filter engineers based on required skills and not already assigned\n                    const isAlreadyAssigned = assignments.some(a => a.projectId._id === currentProject._id && a.engineerId._id === engineer._id);\n                    const hasRequiredSkills = currentProject.requiredSkills.some(skill => engineer.skills.includes(skill));\n                    return hasRequiredSkills && (!isAlreadyAssigned || engineer._id === selectedEngineerId);\n                  }).map(engineer => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: engineer._id,\n                    children: engineer.name\n                  }, engineer._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), selectedEngineerCapacity && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(CapacityBar, {\n                  allocation: selectedEngineerCapacity.allocated,\n                  maxCapacity: 100\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600 mt-1\",\n                  children: [\"Available Capacity: \", selectedEngineerCapacity.available, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), selectedEngineerId && selectedEngineerCapacity && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-2\",\n                    children: \"Allocation Percentage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"25\",\n                    max: \"100\",\n                    step: \"25\",\n                    value: allocationPercentage,\n                    onChange: e => setAllocationPercentage(Number(e.target.value)),\n                    className: \"w-full p-2 border rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-2\",\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: assignmentDates.startDate,\n                    onChange: e => setAssignmentDates(prev => ({\n                      ...prev,\n                      startDate: e.target.value\n                    })),\n                    min: new Date().toISOString().split('T')[0],\n                    className: \"w-full p-2 border rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-2\",\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: assignmentDates.endDate,\n                    onChange: e => setAssignmentDates(prev => ({\n                      ...prev,\n                      endDate: e.target.value\n                    })),\n                    min: assignmentDates.startDate || new Date().toISOString().split('T')[0],\n                    className: \"w-full p-2 border rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-2\",\n                    children: \"Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: role,\n                    onChange: e => setRole(e.target.value),\n                    className: \"w-full p-2 border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"developer\",\n                      children: \"Developer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"tech-lead\",\n                      children: \"Tech Lead\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"architect\",\n                      children: \"Architect\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-end space-x-3 mt-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    setIsModalOpen(false);\n                    setCurrentProject(null);\n                    setSelectedEngineerId('');\n                    setRole('developer');\n                    setError('');\n                  },\n                  className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: async () => {\n                    try {\n                      // Validate capacity\n                      if (selectedEngineerCapacity.available < allocationPercentage) {\n                        setError(`Engineer only has ${selectedEngineerCapacity.available}% capacity available`);\n                        return;\n                      }\n                      const existingAssignment = assignments.find(a => a.projectId._id === currentProject._id && a.engineerId._id === selectedEngineerId);\n                      if (existingAssignment) {\n                        // Update existing assignment\n                        await axios.put(`http://localhost:5000/api/assignments/${existingAssignment._id}`, {\n                          allocationPercentage,\n                          startDate: new Date(assignmentDates.startDate),\n                          endDate: new Date(assignmentDates.endDate),\n                          role: role\n                        });\n                      } else {\n                        // Validate team size for new assignments\n                        const currentTeamSize = assignments.filter(a => a.projectId._id === currentProject._id).length;\n                        if (currentTeamSize >= currentProject.teamSize) {\n                          setError(`Cannot add more engineers. Team size limit (${currentProject.teamSize}) reached.`);\n                          return;\n                        }\n\n                        // Create new assignment\n                        await axios.post('http://localhost:5000/api/assignments', {\n                          projectId: currentProject._id,\n                          engineerId: selectedEngineerId,\n                          allocationPercentage,\n                          startDate: new Date(assignmentDates.startDate),\n                          endDate: new Date(assignmentDates.endDate),\n                          role: role\n                        });\n                      }\n                      setIsModalOpen(false);\n                      setCurrentProject(null);\n                      setSelectedEngineerId('');\n                      setSelectedEngineerCapacity(null);\n                      fetchAssignments(); // Refresh the assignments list\n                    } catch (err) {\n                      var _err$response, _err$response$data;\n                      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create assignment');\n                    }\n                  },\n                  disabled: !selectedEngineerId || !assignmentDates.startDate || !assignmentDates.endDate,\n                  className: \"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md disabled:opacity-50\",\n                  children: selectedEngineerId ? 'Save Changes' : 'Add Engineer'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isManager() && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-h-[70vh] overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"min-w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-50 sticky top-0 z-10 bg-white\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Project Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Team (Assigned/Total)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Assigned Engineers\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Required Skills\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Duration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"bg-white divide-y divide-gray-200 overflow-y-auto\",\n                children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm font-medium text-gray-900\",\n                      children: project.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-900\",\n                      children: [assignments.filter(a => a.projectId._id === project._id).length, \" / \", project.teamSize]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-900\",\n                      children: assignments.filter(a => a.projectId._id === project._id).map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center gap-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: a.engineerId.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 390,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-gray-500 text-xs\",\n                          children: [\"(\", a.role, \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 391,\n                          columnNumber: 37\n                        }, this)]\n                      }, a._id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex gap-2\",\n                      children: project.requiredSkills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"bg-gray-100 text-gray-700 px-2 py-1 rounded text-sm\",\n                        children: skill\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 399,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-900\",\n                      children: [new Date(project.startDate).toLocaleDateString(), \" -\", new Date(project.endDate).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm text-gray-900\",\n                      children: project.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-6 py-4 whitespace-nowrap text-sm font-medium\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-col space-y-2\",\n                      children: isManager() && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [(() => {\n                          const currentTeamSize = assignments.filter(a => a.projectId._id === project._id).length;\n                          return currentTeamSize < project.teamSize && /*#__PURE__*/_jsxDEV(\"button\", {\n                            onClick: () => {\n                              setCurrentProject(project);\n                              setIsModalOpen(true);\n                              setSelectedEngineerId(''); // Reset selection for new assignment\n                            },\n                            className: \"text-blue-600 hover:text-blue-900 w-full text-left\",\n                            children: \"Assign Engineer\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 426,\n                            columnNumber: 39\n                          }, this);\n                        })(), assignments.filter(a => a.projectId._id === project._id).length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => {\n                            setCurrentProject(project);\n                            setIsModalOpen(true);\n                          },\n                          className: \"text-gray-600 hover:text-gray-900 w-full text-left\",\n                          children: \"Manage Team\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 27\n                  }, this)]\n                }, project._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Assignments, \"iX0GvWHeZGqROQbodDc32idAjDo=\", false, function () {\n  return [useStore, useAuth];\n});\n_c = Assignments;\nexport default Assignments;\nvar _c;\n$RefreshReg$(_c, \"Assignments\");","map":{"version":3,"names":["React","useEffect","useState","useStore","useAuth","CapacityBar","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Assignments","_s","assignments","projects","loading","fetchAssignments","fetchProjects","isManager","isModalOpen","setIsModalOpen","currentProject","setCurrentProject","engineers","setEngineers","selectedEngineerId","setSelectedEngineerId","selectedEngineerCapacity","setSelectedEngineerCapacity","allocationPercentage","setAllocationPercentage","assignmentDates","setAssignmentDates","startDate","endDate","role","setRole","error","setError","loadingEngineers","setLoadingEngineers","fetchEngineers","response","get","data","err","fetchEngineerCapacity","available","Math","floor","handleEditAssignment","assignment","engineerId","_id","Date","toISOString","split","handleDeleteAssignment","assignmentId","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","filter","a","projectId","map","onClick","value","onChange","e","target","disabled","Boolean","engineer","isAlreadyAssigned","some","hasRequiredSkills","requiredSkills","skill","skills","includes","allocation","allocated","maxCapacity","type","min","max","step","Number","prev","existingAssignment","find","put","currentTeamSize","length","teamSize","post","_err$response","_err$response$data","message","project","index","toLocaleDateString","status","_c","$RefreshReg$"],"sources":["C:/Assignment/frontend/src/pages/Assignments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useStore } from '../store';\r\nimport { useAuth } from '../store/auth';\r\nimport { CapacityBar } from '../components/ui/capacity-bar';\r\nimport axios from 'axios';\r\n\r\nfunction Assignments() {\r\n  const { assignments, projects, loading, fetchAssignments, fetchProjects } = useStore();\r\n  const { isManager } = useAuth();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n  const [engineers, setEngineers] = useState([]);\r\n  const [selectedEngineerId, setSelectedEngineerId] = useState('');\r\n  const [selectedEngineerCapacity, setSelectedEngineerCapacity] = useState(null);\r\n  const [allocationPercentage, setAllocationPercentage] = useState(50);\r\n  const [assignmentDates, setAssignmentDates] = useState({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [role, setRole] = useState('developer');\r\n  const [error, setError] = useState('');\r\n  const [loadingEngineers, setLoadingEngineers] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchAssignments();\r\n    fetchProjects();\r\n  }, [fetchAssignments, fetchProjects]);\r\n\r\n  // Fetch engineers when modal is opened\r\n  useEffect(() => {\r\n    const fetchEngineers = async () => {\r\n      if (isModalOpen && currentProject) {\r\n        setLoadingEngineers(true);\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/engineers');\r\n          setEngineers(response.data);\r\n        } catch (err) {\r\n          setError('Failed to load engineers');\r\n        }\r\n        setLoadingEngineers(false);\r\n      }\r\n    };\r\n    fetchEngineers();\r\n  }, [isModalOpen, currentProject]);\r\n\r\n  // Fetch engineer capacity when an engineer is selected\r\n  useEffect(() => {\r\n    const fetchEngineerCapacity = async () => {\r\n      if (selectedEngineerId) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:5000/api/engineers/${selectedEngineerId}/capacity`);\r\n          setSelectedEngineerCapacity(response.data);\r\n          // Adjust allocation percentage based on available capacity\r\n          if (response.data.available < allocationPercentage) {\r\n            setAllocationPercentage(Math.floor(response.data.available / 25) * 25);\r\n          }\r\n        } catch (err) {\r\n          setError('Failed to load engineer capacity');\r\n        }\r\n      }\r\n    };\r\n    fetchEngineerCapacity();\r\n  }, [selectedEngineerId, allocationPercentage]);\r\n\r\n  const handleEditAssignment = async (assignment) => {\r\n    setSelectedEngineerId(assignment.engineerId._id);\r\n    setAllocationPercentage(assignment.allocationPercentage);\r\n    setAssignmentDates({\r\n      startDate: new Date(assignment.startDate).toISOString().split('T')[0],\r\n      endDate: new Date(assignment.endDate).toISOString().split('T')[0]\r\n    });\r\n    setRole(assignment.role);\r\n  };\r\n\r\n  const handleDeleteAssignment = async (assignmentId) => {\r\n    if (window.confirm('Are you sure you want to delete this assignment?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/assignments/${assignmentId}`);\r\n        await fetchAssignments(); // Refresh the assignments list\r\n      } catch (err) {\r\n        setError('Failed to delete assignment');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"flex flex-col mb-6\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">\r\n          {isManager() ? \"Resource Management\" : \"Engineer Profile\"}\r\n        </h1>\r\n      </div>\r\n\r\n      {/* Assignment Modal */}\r\n      {isModalOpen && currentProject && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-8 rounded-lg w-full max-w-md\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">{currentProject.name} - Team Management</h2>\r\n            \r\n            {error && <div className=\"mb-4 text-red-500\">{error}</div>}\r\n\r\n            <div className=\"space-y-6\">\r\n              {/* Current Team Section */}\r\n              <div className=\"border-b pb-4\">\r\n                <h3 className=\"text-lg font-medium mb-3\">Current Team</h3>\r\n                <div className=\"space-y-2\">\r\n                  {assignments\r\n                    .filter(a => a.projectId._id === currentProject._id)\r\n                    .map(assignment => (\r\n                      <div key={assignment._id} className=\"flex items-center justify-between bg-gray-50 p-2 rounded\">\r\n                        <div>\r\n                          <span className=\"font-medium\">{assignment.engineerId.name}</span>\r\n                          <span className=\"text-sm text-gray-500 ml-2\">({assignment.role})</span>\r\n                        </div>\r\n                        <div className=\"flex space-x-2\">\r\n                          <button\r\n                            onClick={() => handleEditAssignment(assignment)}\r\n                            className=\"text-gray-600 hover:text-gray-900 text-sm\"\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              if (window.confirm(`Remove ${assignment.engineerId.name} from the project?`)) {\r\n                                handleDeleteAssignment(assignment._id);\r\n                              }\r\n                            }}\r\n                            className=\"text-red-600 hover:text-red-900 text-sm\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Add New Engineer Section */}\r\n              <div>\r\n                <h3 className=\"text-lg font-medium mb-3\">\r\n                  {selectedEngineerId ? 'Edit Assignment' : 'Add New Engineer'}\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Select Engineer\r\n                    </label>\r\n                    {loadingEngineers ? (\r\n                      <div className=\"text-center py-2\">Loading engineers...</div>\r\n                    ) : (\r\n                      <select\r\n                        value={selectedEngineerId}\r\n                        onChange={(e) => {\r\n                          setSelectedEngineerId(e.target.value);\r\n                          setAllocationPercentage(50); // Reset allocation when engineer changes\r\n                        }}\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                        disabled={Boolean(selectedEngineerId)} // Disable when editing\r\n                      >\r\n                        <option value=\"\">Choose an engineer</option>\r\n                        {engineers\r\n                          .filter(engineer => {\r\n                            // Filter engineers based on required skills and not already assigned\r\n                            const isAlreadyAssigned = assignments.some(\r\n                              a => a.projectId._id === currentProject._id && \r\n                                   a.engineerId._id === engineer._id\r\n                            );\r\n                            const hasRequiredSkills = currentProject.requiredSkills.some(skill => \r\n                              engineer.skills.includes(skill)\r\n                            );\r\n                            return hasRequiredSkills && (!isAlreadyAssigned || engineer._id === selectedEngineerId);\r\n                          })\r\n                          .map(engineer => (\r\n                            <option key={engineer._id} value={engineer._id}>\r\n                              {engineer.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    )}\r\n                  </div>\r\n\r\n                  {selectedEngineerCapacity && (\r\n                    <div className=\"mb-4\">\r\n                      <CapacityBar \r\n                        allocation={selectedEngineerCapacity.allocated}\r\n                        maxCapacity={100}\r\n                      />\r\n                      <p className=\"text-sm text-gray-600 mt-1\">\r\n                        Available Capacity: {selectedEngineerCapacity.available}%\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {selectedEngineerId && selectedEngineerCapacity && (\r\n                    <>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                          Allocation Percentage\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"25\"\r\n                          max=\"100\"\r\n                          step=\"25\"\r\n                          value={allocationPercentage}\r\n                          onChange={(e) => setAllocationPercentage(Number(e.target.value))}\r\n                          className=\"w-full p-2 border rounded-md\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                          Start Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={assignmentDates.startDate}\r\n                          onChange={(e) => setAssignmentDates(prev => ({\r\n                            ...prev,\r\n                            startDate: e.target.value\r\n                          }))}\r\n                          min={new Date().toISOString().split('T')[0]}\r\n                          className=\"w-full p-2 border rounded-md\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                          End Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          value={assignmentDates.endDate}\r\n                          onChange={(e) => setAssignmentDates(prev => ({\r\n                            ...prev,\r\n                            endDate: e.target.value\r\n                          }))}\r\n                          min={assignmentDates.startDate || new Date().toISOString().split('T')[0]}\r\n                          className=\"w-full p-2 border rounded-md\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                          Role\r\n                        </label>\r\n                        <select\r\n                          value={role}\r\n                          onChange={(e) => setRole(e.target.value)}\r\n                          className=\"w-full p-2 border rounded-md\"\r\n                        >\r\n                          <option value=\"developer\">Developer</option>\r\n                          <option value=\"tech-lead\">Tech Lead</option>\r\n                          <option value=\"architect\">Architect</option>\r\n                        </select>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  <div className=\"flex justify-end space-x-3 mt-6\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setIsModalOpen(false);\r\n                        setCurrentProject(null);\r\n                        setSelectedEngineerId('');\r\n                        setRole('developer');\r\n                        setError('');\r\n                      }}\r\n                      className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={async () => {\r\n                        try {\r\n                          // Validate capacity\r\n                          if (selectedEngineerCapacity.available < allocationPercentage) {\r\n                            setError(`Engineer only has ${selectedEngineerCapacity.available}% capacity available`);\r\n                            return;\r\n                          }\r\n\r\n                          const existingAssignment = assignments.find(\r\n                            a => a.projectId._id === currentProject._id && a.engineerId._id === selectedEngineerId\r\n                          );\r\n\r\n                          if (existingAssignment) {\r\n                            // Update existing assignment\r\n                            await axios.put(`http://localhost:5000/api/assignments/${existingAssignment._id}`, {\r\n                              allocationPercentage,\r\n                              startDate: new Date(assignmentDates.startDate),\r\n                              endDate: new Date(assignmentDates.endDate),\r\n                              role: role\r\n                            });\r\n                          } else {\r\n                            // Validate team size for new assignments\r\n                            const currentTeamSize = assignments.filter(a => a.projectId._id === currentProject._id).length;\r\n                            if (currentTeamSize >= currentProject.teamSize) {\r\n                              setError(`Cannot add more engineers. Team size limit (${currentProject.teamSize}) reached.`);\r\n                              return;\r\n                            }\r\n\r\n                            // Create new assignment\r\n                            await axios.post('http://localhost:5000/api/assignments', {\r\n                              projectId: currentProject._id,\r\n                              engineerId: selectedEngineerId,\r\n                              allocationPercentage,\r\n                              startDate: new Date(assignmentDates.startDate),\r\n                              endDate: new Date(assignmentDates.endDate),\r\n                              role: role\r\n                            });\r\n                          }\r\n                          setIsModalOpen(false);\r\n                          setCurrentProject(null);\r\n                          setSelectedEngineerId('');\r\n                          setSelectedEngineerCapacity(null);\r\n                          fetchAssignments(); // Refresh the assignments list\r\n                        } catch (err) {\r\n                          setError(err.response?.data?.message || 'Failed to create assignment');\r\n                        }\r\n                      }}\r\n                      disabled={!selectedEngineerId || !assignmentDates.startDate || !assignmentDates.endDate}\r\n                      className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md disabled:opacity-50\"\r\n                    >\r\n                      {selectedEngineerId ? 'Save Changes' : 'Add Engineer'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div>\r\n          {/* Projects Tab - Only visible to managers */}\r\n          {isManager() && (\r\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n              <div className=\"max-h-[70vh] overflow-y-auto\">\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full\">\r\n                    <thead className=\"bg-gray-50 sticky top-0 z-10 bg-white\">\r\n                      <tr>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Project Name\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Team (Assigned/Total)\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Assigned Engineers\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Required Skills\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Duration\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Status\r\n                        </th>\r\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Actions\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200 overflow-y-auto\">\r\n                      {projects.map((project) => (\r\n                        <tr key={project._id}>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {project.name}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm text-gray-900\">\r\n                              {assignments.filter(a => a.projectId._id === project._id).length} / {project.teamSize}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4\">\r\n                            <div className=\"text-sm text-gray-900\">\r\n                              {assignments\r\n                                .filter(a => a.projectId._id === project._id)\r\n                                .map(a => (\r\n                                  <div key={a._id} className=\"flex items-center gap-1\">\r\n                                    <span>{a.engineerId.name}</span>\r\n                                    <span className=\"text-gray-500 text-xs\">({a.role})</span>\r\n                                  </div>\r\n                                ))}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"flex gap-2\">\r\n                              {project.requiredSkills.map((skill, index) => (\r\n                                <span\r\n                                  key={index}\r\n                                  className=\"bg-gray-100 text-gray-700 px-2 py-1 rounded text-sm\"\r\n                                >\r\n                                  {skill}\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm text-gray-900\">\r\n                              {new Date(project.startDate).toLocaleDateString()} -\r\n                              {new Date(project.endDate).toLocaleDateString()}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <div className=\"text-sm text-gray-900\">\r\n                              {project.status}\r\n                            </div>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                            <div className=\"flex flex-col space-y-2\">\r\n                              {isManager() && (\r\n                                <>\r\n                                  {(() => {\r\n                                    const currentTeamSize = assignments.filter(a => a.projectId._id === project._id).length;\r\n                                    return currentTeamSize < project.teamSize && (\r\n                                      <button \r\n                                        onClick={() => {\r\n                                          setCurrentProject(project);\r\n                                          setIsModalOpen(true);\r\n                                          setSelectedEngineerId(''); // Reset selection for new assignment\r\n                                        }}\r\n                                        className=\"text-blue-600 hover:text-blue-900 w-full text-left\"\r\n                                      >\r\n                                        Assign Engineer\r\n                                      </button>\r\n                                    );\r\n                                  })()}\r\n                                  {assignments.filter(a => a.projectId._id === project._id).length > 0 && (\r\n                                    <button\r\n                                      onClick={() => {\r\n                                        setCurrentProject(project);\r\n                                        setIsModalOpen(true);\r\n                                      }}\r\n                                      className=\"text-gray-600 hover:text-gray-900 w-full text-left\"\r\n                                    >\r\n                                      Manage Team\r\n                                    </button>\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assignments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}