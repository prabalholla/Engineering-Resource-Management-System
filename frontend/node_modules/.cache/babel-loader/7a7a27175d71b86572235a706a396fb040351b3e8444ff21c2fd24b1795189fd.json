{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment\\\\frontend\\\\src\\\\pages\\\\Assignments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useStore } from '../store';\nimport { useAuth } from '../store/auth';\nimport { SkillTagList } from '../components/ui/skill-tag';\nimport { CapacityBar } from '../components/ui/capacity-bar';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Assignments() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    assignments,\n    projects,\n    loading,\n    fetchAssignments,\n    fetchProjects,\n    createAssignment\n  } = useStore();\n  const {\n    user,\n    isManager\n  } = useAuth();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [engineers, setEngineers] = useState([]);\n  const [selectedEngineerId, setSelectedEngineerId] = useState('');\n  const [selectedEngineerCapacity, setSelectedEngineerCapacity] = useState(null);\n  const [allocationPercentage, setAllocationPercentage] = useState(50);\n  const [assignmentDates, setAssignmentDates] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [error, setError] = useState('');\n  const [loadingEngineers, setLoadingEngineers] = useState(false);\n  useEffect(() => {\n    fetchAssignments();\n    fetchProjects();\n  }, [fetchAssignments, fetchProjects]);\n\n  // Fetch engineers when modal is opened\n  useEffect(() => {\n    const fetchEngineers = async () => {\n      if (isModalOpen && currentProject) {\n        setLoadingEngineers(true);\n        try {\n          const response = await axios.get('http://localhost:5000/api/engineers');\n          setEngineers(response.data);\n        } catch (err) {\n          setError('Failed to load engineers');\n        }\n        setLoadingEngineers(false);\n      }\n    };\n    fetchEngineers();\n  }, [isModalOpen, currentProject]);\n\n  // Fetch engineer capacity when an engineer is selected\n  useEffect(() => {\n    const fetchEngineerCapacity = async () => {\n      if (selectedEngineerId) {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/engineers/${selectedEngineerId}/capacity`);\n          setSelectedEngineerCapacity(response.data);\n          // Adjust allocation percentage based on available capacity\n          if (response.data.available < allocationPercentage) {\n            setAllocationPercentage(Math.floor(response.data.available / 25) * 25);\n          }\n        } catch (err) {\n          setError('Failed to load engineer capacity');\n        }\n      }\n    };\n    fetchEngineerCapacity();\n  }, [selectedEngineerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Projects and Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isModalOpen && currentProject && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: [\"Assign Engineer to \", currentProject.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 text-red-500\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Select Engineer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), loadingEngineers ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-2\",\n              children: \"Loading engineers...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedEngineerId,\n              onChange: e => {\n                setSelectedEngineerId(e.target.value);\n                setAllocationPercentage(50); // Reset allocation when engineer changes\n              },\n              className: \"w-full p-2 border rounded-md\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Choose an engineer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), engineers.filter(engineer => {\n                // Filter engineers based on required skills\n                return currentProject.requiredSkills.some(skill => engineer.skills.includes(skill));\n              }).map(engineer => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: engineer._id,\n                children: engineer.name\n              }, engineer._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), selectedEngineerCapacity && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(CapacityBar, {\n              capacity: selectedEngineerCapacity.allocated,\n              maxCapacity: selectedEngineerCapacity.maxCapacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600 mt-1\",\n              children: [\"Available Capacity: \", selectedEngineerCapacity.available, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), selectedEngineerId && selectedEngineerCapacity && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Allocation Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"25\",\n                max: \"100\",\n                step: \"25\",\n                value: allocationPercentage,\n                onChange: e => setAllocationPercentage(Number(e.target.value)),\n                className: \"w-full p-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: assignmentDates.startDate,\n                onChange: e => setAssignmentDates(prev => ({\n                  ...prev,\n                  startDate: e.target.value\n                })),\n                min: new Date().toISOString().split('T')[0],\n                className: \"w-full p-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: assignmentDates.endDate,\n                onChange: e => setAssignmentDates(prev => ({\n                  ...prev,\n                  endDate: e.target.value\n                })),\n                min: assignmentDates.startDate || new Date().toISOString().split('T')[0],\n                className: \"w-full p-2 border rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setIsModalOpen(false);\n                setCurrentProject(null);\n                setSelectedEngineerId('');\n                setError('');\n              },\n              className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: async () => {\n                try {\n                  // Validate capacity\n                  if (selectedEngineerCapacity.available < allocationPercentage) {\n                    setError(`Engineer only has ${selectedEngineerCapacity.available}% capacity available`);\n                    return;\n                  }\n\n                  // Create the assignment through the API\n                  await axios.post('http://localhost:5000/api/assignments', {\n                    projectId: currentProject._id,\n                    engineerId: selectedEngineerId,\n                    allocationPercentage,\n                    startDate: new Date(assignmentDates.startDate),\n                    endDate: new Date(assignmentDates.endDate)\n                  });\n                  setIsModalOpen(false);\n                  setCurrentProject(null);\n                  setSelectedEngineerId('');\n                  setSelectedEngineerCapacity(null);\n                  fetchAssignments(); // Refresh the assignments list\n                } catch (err) {\n                  var _err$response, _err$response$data;\n                  setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to create assignment');\n                }\n              },\n              disabled: !selectedEngineerId || !assignmentDates.startDate || !assignmentDates.endDate,\n              className: \"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md disabled:opacity-50\",\n              children: \"Assign Engineer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading assignments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-50\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Team (Assigned/Total)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Required Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"bg-white divide-y divide-gray-200\",\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-gray-900\",\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-900\",\n                children: [assignments.filter(a => a.projectId._id === project._id).length, \" / \", project.teamSize]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: project.requiredSkills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bg-gray-100 text-gray-700 px-2 py-1 rounded text-sm\",\n                  children: skill\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-900\",\n                children: [new Date(project.startDate).toLocaleDateString(), \" -\", new Date(project.endDate).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-900\",\n                children: project.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\",\n              children: isManager() && project.teamSize > assignments.filter(a => a.projectId._id === project._id).length && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setCurrentProject(project);\n                  setIsModalOpen(true);\n                },\n                className: \"text-blue-600 hover:text-blue-900\",\n                children: \"Assign Engineer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, project._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Assignments, \"jpGMtF+XR2e4Evp21z5KwtFK2LY=\", false, function () {\n  return [useNavigate, useStore, useAuth];\n});\n_c = Assignments;\nexport default Assignments;\nvar _c;\n$RefreshReg$(_c, \"Assignments\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useStore","useAuth","SkillTagList","CapacityBar","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Assignments","_s","navigate","assignments","projects","loading","fetchAssignments","fetchProjects","createAssignment","user","isManager","isModalOpen","setIsModalOpen","currentProject","setCurrentProject","engineers","setEngineers","selectedEngineerId","setSelectedEngineerId","selectedEngineerCapacity","setSelectedEngineerCapacity","allocationPercentage","setAllocationPercentage","assignmentDates","setAssignmentDates","startDate","endDate","error","setError","loadingEngineers","setLoadingEngineers","fetchEngineers","response","get","data","err","fetchEngineerCapacity","available","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","e","target","filter","engineer","requiredSkills","some","skill","skills","includes","map","_id","capacity","allocated","maxCapacity","type","min","max","step","Number","prev","Date","toISOString","split","onClick","post","projectId","engineerId","_err$response","_err$response$data","message","disabled","project","a","length","teamSize","index","toLocaleDateString","status","_c","$RefreshReg$"],"sources":["C:/Assignment/frontend/src/pages/Assignments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useStore } from '../store';\r\nimport { useAuth } from '../store/auth';\r\nimport { SkillTagList } from '../components/ui/skill-tag';\r\nimport { CapacityBar } from '../components/ui/capacity-bar';\r\nimport axios from 'axios';\r\n\r\nfunction Assignments() {\r\n  const navigate = useNavigate();\r\n  const { assignments, projects, loading, fetchAssignments, fetchProjects, createAssignment } = useStore();\r\n  const { user, isManager } = useAuth();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n  const [engineers, setEngineers] = useState([]);\r\n  const [selectedEngineerId, setSelectedEngineerId] = useState('');\r\n  const [selectedEngineerCapacity, setSelectedEngineerCapacity] = useState(null);\r\n  const [allocationPercentage, setAllocationPercentage] = useState(50);\r\n  const [assignmentDates, setAssignmentDates] = useState({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loadingEngineers, setLoadingEngineers] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchAssignments();\r\n    fetchProjects();\r\n  }, [fetchAssignments, fetchProjects]);\r\n\r\n  // Fetch engineers when modal is opened\r\n  useEffect(() => {\r\n    const fetchEngineers = async () => {\r\n      if (isModalOpen && currentProject) {\r\n        setLoadingEngineers(true);\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/engineers');\r\n          setEngineers(response.data);\r\n        } catch (err) {\r\n          setError('Failed to load engineers');\r\n        }\r\n        setLoadingEngineers(false);\r\n      }\r\n    };\r\n    fetchEngineers();\r\n  }, [isModalOpen, currentProject]);\r\n\r\n  // Fetch engineer capacity when an engineer is selected\r\n  useEffect(() => {\r\n    const fetchEngineerCapacity = async () => {\r\n      if (selectedEngineerId) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:5000/api/engineers/${selectedEngineerId}/capacity`);\r\n          setSelectedEngineerCapacity(response.data);\r\n          // Adjust allocation percentage based on available capacity\r\n          if (response.data.available < allocationPercentage) {\r\n            setAllocationPercentage(Math.floor(response.data.available / 25) * 25);\r\n          }\r\n        } catch (err) {\r\n          setError('Failed to load engineer capacity');\r\n        }\r\n      }\r\n    };\r\n    fetchEngineerCapacity();\r\n  }, [selectedEngineerId]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold\">Projects and Assignments</h1>\r\n      </div>\r\n\r\n      {/* Assignment Modal */}\r\n      {isModalOpen && currentProject && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-8 rounded-lg w-full max-w-md\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">Assign Engineer to {currentProject.name}</h2>\r\n            \r\n            {error && <div className=\"mb-4 text-red-500\">{error}</div>}\r\n\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Select Engineer\r\n                </label>\r\n                {loadingEngineers ? (\r\n                  <div className=\"text-center py-2\">Loading engineers...</div>\r\n                ) : (\r\n                  <select\r\n                    value={selectedEngineerId}\r\n                    onChange={(e) => {\r\n                      setSelectedEngineerId(e.target.value);\r\n                      setAllocationPercentage(50); // Reset allocation when engineer changes\r\n                    }}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  >\r\n                    <option value=\"\">Choose an engineer</option>\r\n                    {engineers\r\n                      .filter(engineer => {\r\n                        // Filter engineers based on required skills\r\n                        return currentProject.requiredSkills.some(skill => \r\n                          engineer.skills.includes(skill)\r\n                        );\r\n                      })\r\n                      .map(engineer => (\r\n                        <option key={engineer._id} value={engineer._id}>\r\n                          {engineer.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                )}\r\n              </div>\r\n\r\n              {selectedEngineerCapacity && (\r\n                <div className=\"mb-4\">\r\n                  <CapacityBar \r\n                    capacity={selectedEngineerCapacity.allocated}\r\n                    maxCapacity={selectedEngineerCapacity.maxCapacity}\r\n                  />\r\n                  <p className=\"text-sm text-gray-600 mt-1\">\r\n                    Available Capacity: {selectedEngineerCapacity.available}%\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              {selectedEngineerId && selectedEngineerCapacity && (\r\n                <>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Allocation Percentage\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"25\"\r\n                      max=\"100\"\r\n                      step=\"25\"\r\n                      value={allocationPercentage}\r\n                      onChange={(e) => setAllocationPercentage(Number(e.target.value))}\r\n                      className=\"w-full p-2 border rounded-md\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Start Date\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={assignmentDates.startDate}\r\n                      onChange={(e) => setAssignmentDates(prev => ({\r\n                        ...prev,\r\n                        startDate: e.target.value\r\n                      }))}\r\n                      min={new Date().toISOString().split('T')[0]}\r\n                      className=\"w-full p-2 border rounded-md\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      End Date\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      value={assignmentDates.endDate}\r\n                      onChange={(e) => setAssignmentDates(prev => ({\r\n                        ...prev,\r\n                        endDate: e.target.value\r\n                      }))}\r\n                      min={assignmentDates.startDate || new Date().toISOString().split('T')[0]}\r\n                      className=\"w-full p-2 border rounded-md\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              <div className=\"flex justify-end space-x-3 mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setIsModalOpen(false);\r\n                    setCurrentProject(null);\r\n                    setSelectedEngineerId('');\r\n                    setError('');\r\n                  }}\r\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={async () => {\r\n                    try {\r\n                      // Validate capacity\r\n                      if (selectedEngineerCapacity.available < allocationPercentage) {\r\n                        setError(`Engineer only has ${selectedEngineerCapacity.available}% capacity available`);\r\n                        return;\r\n                      }\r\n\r\n                      // Create the assignment through the API\r\n                      await axios.post('http://localhost:5000/api/assignments', {\r\n                        projectId: currentProject._id,\r\n                        engineerId: selectedEngineerId,\r\n                        allocationPercentage,\r\n                        startDate: new Date(assignmentDates.startDate),\r\n                        endDate: new Date(assignmentDates.endDate)\r\n                      });\r\n\r\n                      setIsModalOpen(false);\r\n                      setCurrentProject(null);\r\n                      setSelectedEngineerId('');\r\n                      setSelectedEngineerCapacity(null);\r\n                      fetchAssignments(); // Refresh the assignments list\r\n                    } catch (err) {\r\n                      setError(err.response?.data?.message || 'Failed to create assignment');\r\n                    }\r\n                  }}\r\n                  disabled={!selectedEngineerId || !assignmentDates.startDate || !assignmentDates.endDate}\r\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md disabled:opacity-50\"\r\n                >\r\n                  Assign Engineer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <p>Loading assignments...</p>\r\n      ) : (\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <table className=\"min-w-full\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Project Name\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Team (Assigned/Total)\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Required Skills\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Duration\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {projects.map((project) => (\r\n                <tr key={project._id}>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm font-medium text-gray-900\">\r\n                      {project.name}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {assignments.filter(a => a.projectId._id === project._id).length} / {project.teamSize}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex gap-2\">\r\n                      {project.requiredSkills.map((skill, index) => (\r\n                        <span\r\n                          key={index}\r\n                          className=\"bg-gray-100 text-gray-700 px-2 py-1 rounded text-sm\"\r\n                        >\r\n                          {skill}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {new Date(project.startDate).toLocaleDateString()} -\r\n                      {new Date(project.endDate).toLocaleDateString()}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"text-sm text-gray-900\">\r\n                      {project.status}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                    {isManager() && project.teamSize > assignments.filter(a => a.projectId._id === project._id).length && (\r\n                      <button \r\n                        onClick={() => {\r\n                          setCurrentProject(project);\r\n                          setIsModalOpen(true);\r\n                        }}\r\n                        className=\"text-blue-600 hover:text-blue-900\"\r\n                      >\r\n                        Assign Engineer\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assignments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}