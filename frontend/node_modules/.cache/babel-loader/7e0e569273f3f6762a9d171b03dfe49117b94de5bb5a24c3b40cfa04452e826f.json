{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nexport const useAuth = create(set => ({\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n  login: async (email, password) => {\n    try {\n      console.log('Login attempt with:', email); // Debug log\n      set({\n        loading: true,\n        error: null\n      });\n\n      // Make sure we're sending the correct data format\n      const loginData = {\n        email,\n        password\n      };\n      console.log('Sending login data:', loginData); // Debug log\n\n      const response = await axios.post('http://localhost:5000/api/auth/login', loginData);\n      console.log('Login response:', response.data); // Debug log\n\n      const {\n        user,\n        token\n      } = response.data;\n      // Server sends 'id' but we use '_id' internally\n      const normalizedUser = {\n        ...user,\n        _id: user.id || user._id // Use either id or _id\n      };\n\n      // Ensure we have a valid user object\n      if (!normalizedUser._id) {\n        console.error('Invalid user data received:', response.data);\n        throw new Error('Invalid user data received');\n      }\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      set({\n        user: normalizedUser,\n        isAuthenticated: true,\n        loading: false\n      });\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      set({\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed',\n        loading: false\n      });\n      return false;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    set({\n      user: null,\n      isAuthenticated: false\n    });\n  },\n  checkAuth: async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        set({\n          isAuthenticated: false\n        });\n        return;\n      }\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const response = await axios.get('http://localhost:5000/api/auth/me');\n      set({\n        user: response.data,\n        isAuthenticated: true\n      });\n    } catch (error) {\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      set({\n        user: null,\n        isAuthenticated: false\n      });\n    }\n  },\n  isManager: () => {\n    var _state$user;\n    const state = useAuth.getState();\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === 'manager';\n  },\n  isEngineer: () => {\n    var _state$user2;\n    const state = useAuth.getState();\n    return ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.role) === 'engineer';\n  }\n}));","map":{"version":3,"names":["create","axios","useAuth","set","user","isAuthenticated","loading","error","login","email","password","console","log","loginData","response","post","data","token","normalizedUser","_id","id","Error","localStorage","setItem","defaults","headers","common","_error$response","_error$response$data","message","logout","removeItem","checkAuth","getItem","get","isManager","_state$user","state","getState","role","isEngineer","_state$user2"],"sources":["C:/Assignment/frontend/src/store/auth.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport axios from 'axios';\r\n\r\nexport const useAuth = create((set) => ({\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n\r\n  login: async (email, password) => {\r\n    try {\r\n      console.log('Login attempt with:', email); // Debug log\r\n      set({ loading: true, error: null });\r\n      \r\n      // Make sure we're sending the correct data format\r\n      const loginData = { email, password };\r\n      console.log('Sending login data:', loginData); // Debug log\r\n      \r\n      const response = await axios.post('http://localhost:5000/api/auth/login', loginData);\r\n      console.log('Login response:', response.data); // Debug log\r\n      \r\n      const { user, token } = response.data;\r\n      // Server sends 'id' but we use '_id' internally\r\n      const normalizedUser = {\r\n        ...user,\r\n        _id: user.id || user._id // Use either id or _id\r\n      };\r\n      \r\n      // Ensure we have a valid user object\r\n      if (!normalizedUser._id) {\r\n        console.error('Invalid user data received:', response.data);\r\n        throw new Error('Invalid user data received');\r\n      }\r\n      \r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      set({ user: normalizedUser, isAuthenticated: true, loading: false });\r\n      return true;\r\n    } catch (error) {\r\n      set({ \r\n        error: error.response?.data?.message || 'Login failed', \r\n        loading: false \r\n      });\r\n      return false;\r\n    }\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    set({ user: null, isAuthenticated: false });\r\n  },\r\n\r\n  checkAuth: async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        set({ isAuthenticated: false });\r\n        return;\r\n      }\r\n\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      const response = await axios.get('http://localhost:5000/api/auth/me');\r\n      set({ user: response.data, isAuthenticated: true });\r\n    } catch (error) {\r\n      localStorage.removeItem('token');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      set({ user: null, isAuthenticated: false });\r\n    }\r\n  },\r\n\r\n  isManager: () => {\r\n    const state = useAuth.getState();\r\n    return state.user?.role === 'manager';\r\n  },\r\n\r\n  isEngineer: () => {\r\n    const state = useAuth.getState();\r\n    return state.user?.role === 'engineer';\r\n  }\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}