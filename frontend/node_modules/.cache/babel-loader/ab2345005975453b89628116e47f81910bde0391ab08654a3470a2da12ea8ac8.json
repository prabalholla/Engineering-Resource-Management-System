{"ast":null,"code":"var _jsxFileName = \"C:\\\\Assignment\\\\frontend\\\\src\\\\pages\\\\MyAssignments.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useStore } from '../store';\nimport { useAuth } from '../store/auth';\nimport { AssignmentTimeline } from '../components/ui/assignment-timeline';\nimport { CapacityBar } from '../components/ui/capacity-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyAssignments() {\n  _s();\n  const {\n    assignments,\n    loading,\n    fetchAssignments\n  } = useStore();\n  const {\n    user\n  } = useAuth();\n  React.useEffect(() => {\n    fetchAssignments();\n  }, [fetchAssignments]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // We don't need to filter by engineerId anymore since the backend handles that\n  const currentDate = new Date();\n  const currentAssignments = assignments.filter(a => new Date(a.startDate) <= currentDate && new Date(a.endDate) >= currentDate).sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\n  const upcomingAssignments = assignments.filter(a => new Date(a.startDate) > currentDate).sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\n\n  // Calculate total capacity used\n  const totalCapacityUsed = currentAssignments.reduce((sum, assignment) => sum + assignment.allocationPercentage, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"My Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-sm p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Current Capacity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CapacityBar, {\n        capacity: totalCapacityUsed,\n        maxCapacity: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-2\",\n        children: [totalCapacityUsed, \"% of capacity utilized\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-sm p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Current Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), currentAssignments.length > 0 ? /*#__PURE__*/_jsxDEV(AssignmentTimeline, {\n        assignments: currentAssignments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No current assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-sm p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Upcoming Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), upcomingAssignments.length > 0 ? /*#__PURE__*/_jsxDEV(AssignmentTimeline, {\n        assignments: upcomingAssignments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No upcoming assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(MyAssignments, \"i58F6O+eLRU6cTfa8wwGcaayS2Q=\", false, function () {\n  return [useStore, useAuth];\n});\n_c = MyAssignments;\nvar _c;\n$RefreshReg$(_c, \"MyAssignments\");","map":{"version":3,"names":["React","useStore","useAuth","AssignmentTimeline","CapacityBar","jsxDEV","_jsxDEV","MyAssignments","_s","assignments","loading","fetchAssignments","user","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentDate","Date","currentAssignments","filter","a","startDate","endDate","sort","b","upcomingAssignments","totalCapacityUsed","reduce","sum","assignment","allocationPercentage","capacity","maxCapacity","length","_c","$RefreshReg$"],"sources":["C:/Assignment/frontend/src/pages/MyAssignments.js"],"sourcesContent":["import React from 'react';\r\nimport { useStore } from '../store';\r\nimport { useAuth } from '../store/auth';\r\nimport { AssignmentTimeline } from '../components/ui/assignment-timeline';\r\nimport { CapacityBar } from '../components/ui/capacity-bar';\r\n\r\nexport default function MyAssignments() {\r\n  const { assignments, loading, fetchAssignments } = useStore();\r\n  const { user } = useAuth();\r\n\r\n  React.useEffect(() => {\r\n    fetchAssignments();\r\n  }, [fetchAssignments]);\r\n\r\n  if (loading) {\r\n    return <div className=\"container mx-auto px-4 py-8\">Loading...</div>;\r\n  }\r\n\r\n  // We don't need to filter by engineerId anymore since the backend handles that\r\n  const currentDate = new Date();\r\n  \r\n  const currentAssignments = assignments\r\n    .filter(a => new Date(a.startDate) <= currentDate && new Date(a.endDate) >= currentDate)\r\n    .sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\r\n\r\n  const upcomingAssignments = assignments\r\n    .filter(a => new Date(a.startDate) > currentDate)\r\n    .sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\r\n\r\n  // Calculate total capacity used\r\n  const totalCapacityUsed = currentAssignments.reduce(\r\n    (sum, assignment) => sum + assignment.allocationPercentage,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">My Assignments</h1>\r\n      \r\n      {/* Total Capacity Bar */}\r\n      <div className=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Current Capacity</h2>\r\n        <CapacityBar \r\n          capacity={totalCapacityUsed}\r\n          maxCapacity={100}\r\n        />\r\n        <p className=\"text-sm text-gray-600 mt-2\">\r\n          {totalCapacityUsed}% of capacity utilized\r\n        </p>\r\n      </div>\r\n\r\n      {/* Current Assignments */}\r\n      <div className=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Current Projects</h2>\r\n        {currentAssignments.length > 0 ? (\r\n          <AssignmentTimeline assignments={currentAssignments} />\r\n        ) : (\r\n          <p className=\"text-gray-500\">No current assignments</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Upcoming Assignments */}\r\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Upcoming Projects</h2>\r\n        {upcomingAssignments.length > 0 ? (\r\n          <AssignmentTimeline assignments={upcomingAssignments} />\r\n        ) : (\r\n          <p className=\"text-gray-500\">No upcoming assignments</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}